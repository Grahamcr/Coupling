task clean {
    doLast {
        delete file('public/app/build')
        delete file('test-output')
    }
}

task installNodeModules(type: Exec) {
    inputs.file file('package.json')
    outputs.dir file('node_modules')
    commandLine "npm", "install"
}

task clientCompile(type: Exec) {
    dependsOn installNodeModules
    mustRunAfter clean
    inputs.file file('package.json')
    inputs.file file('webpack.config.js')
    inputs.file file('public')
    outputs.dir file('public/app/build')
    commandLine "npm", "run", "webpack", '--silent'
}

task clientTest(type: Exec) {
    dependsOn installNodeModules
    inputs.file file('package.json')
    inputs.file file('public')
    inputs.file file('karma.conf.js')
    inputs.file file('test/unit/client')
    outputs.dir file('test-output/client')

    commandLine 'npm', 'run', 'clientTest', '--silent'
}

task serverTest(type: Exec) {
    dependsOn installNodeModules
    inputs.file file('package.json')
    inputs.file file('server')
    inputs.file file('test/unit/server')
    outputs.file file('test-output/server.unit.xml')

    commandLine 'npm', 'run', 'serverTest', '--silent'
}

task endpointTest(type: Exec) {
    dependsOn installNodeModules
    mustRunAfter serverTest
    inputs.file serverTest.inputs.files
    inputs.file file('package.json')
    inputs.file file('test/endpoint')
    outputs.file file('test-output/endpoint.xml')

    commandLine 'npm', 'run', 'endpointTest', '--silent'
}

task endToEndTest(type: Exec) {
    dependsOn installNodeModules, clientCompile
    mustRunAfter clientCompile, serverTest, clientTest, endpointTest
    inputs.file clientTest.inputs.files
    inputs.file serverTest.inputs.files
    inputs.file file('package.json')
    inputs.file file('test/endpoint')
    outputs.file file('test-output/e2e.xml')

    commandLine 'npm', 'run', 'protractor', '--silent'
}

task test {
    dependsOn serverTest, clientTest, endpointTest
}

task build {
    dependsOn test, endToEndTest, clientCompile
}